#!/bin/bash

my_dir="$( cd "$( dirname "$0"  )" && pwd  )"
# put device name here to run fio test for 
# multiple disks in parallel
# example disks=(sfdv0n1 sfdv1n1 nvme0n1 nvme1n1)
disks=(sfdv0n1)

# dev_prefix=sfdv
# for i in {0..15}
# do
#     disks="${disks} ${dev_prefix}${i}n1"
# done

# workloads
workloads=(\
    precond_seq \
    seqwrite \
    seqread \
    precond_rand \
    randwrite \
    randrw \
    randread \
    lat_write \
    lat_read\
    )

# change the numbers below to control compressibility
# generated by fio. larger number means higher 
# compressibility 
comp_ratio=60
comp_opt_str=""

# ramp_time=2
# runtime=5
export ramp_time=60
export runtime=1800

if [ "${comp_ratio}" != "" ]; 
then
    comp_opt_str=" --buffer_compress_chunk=4k --buffer_compress_percentage=${comp_ratio} "    
fi

timestamp=`date +%Y%m%d_%H%M%S`
output_dir=${my_dir}/${timestamp}

if [ ! -d "${output_dir}" ]; then mkdir -p ${output_dir}; fi
iostat_dir=${output_dir}/iostat
result_dir=${output_dir}/result
sysinfo_dir=${output_dir}/sysinfo
mkdir -p ${iostat_dir}
mkdir -p ${result_dir}
mkdir -p ${sysinfo_dir}

source ${my_dir}/functions

for disk in ${disks[@]}
do
    collect_sys_info ${disk} > ${sysinfo_dir}/${disk}_1.info
done

for workload in ${workloads[@]}
do
    pid_list=""
    for disk in ${disks[@]};
    do
        iostat -dxmct 1 ${disk} > ${iostat_dir}/${disk}_${workload}.iostat &
        fio ${comp_opt_str} \
            --filename=/dev/${disk} \
            --output=${result_dir}/${disk}_${workload}.fio \
            ${my_dir}/jobs/${workload}.fio &
        pid_list="${pid_list} $!"
    done

    wait ${pid_list}
    pkill -9 iostat
done

for disk in ${disks[@]}
do
    collect_sys_info ${disk} > ${sysinfo_dir}/${disk}_2.info
done

iostat_to_csv ${iostat_dir} ${disk}
for disk in ${disks[@]}
do
    fio_to_csv ${result_dir} ${disk}
done
consolidate_summary ${result_dir} ${my_dir}