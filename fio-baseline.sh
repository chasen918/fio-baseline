#!/bin/bash

# put device name here to run fio test for 
# multiple disks in parallel
# example disks=(sfdv0n1 sfdv1n1 nvme0n1 nvme1n1)
disks=(sfdv0n1)

# change the numbers below to control compressibility
# generated by fio. larger number means higher 
# compressibility 
comp_ratio=75
comp_opt_str=""; 

if [ "${comp_ratio}" != "" ]; 
then
    comp_opt_str=" --buffer_compress_chunk=4k --buffer_compress_percentage=${comp_ratio} "    
fi

timestamp=`date +%Y%m%d_%H%M%S`

if [ ! -d "${timestamp}" ]; then mkdir ${timestamp}; fi

pid_list=""
for disk in ${disks[@]};
do
    iostat -dxmct 1 ${disk} > ${timestamp}/${disk}.iostat &
    fio ${comp_opt_str} \
        --filename=/dev/${disk} \
        --output=${timestamp}/${disk}.fio \
        ./baseline.fio &
    pid_list="${pid_list} $!"
done

wait ${pid_list}
pkill -9 iostat

pushd ${timestamp}
iofields="1,4-9,14"
cpufields="1-2,4"
for fiostat in `ls *.iostat`
do
    grep -m1 Device $fiostat | sed -r "s/\s+/,/g" | cut -d, -f ${iofields} > ${fiostat}_io.csv
    grep -e sfd -e nvme $fiostat | sed -r "s/\s+/,/g"  | cut -d, -f ${iofields} >> ${fiostat}_io.csv

    grep -m1 avg-cpu $fiostat | sed -r "s/\s+/,/g" | cut -d, -f ${cpufields} > ${fiostat}_cpu.csv
    grep -A1 avg-cpu $fiostat | grep -v \- | sed -r "s/\s+/,/g" | cut -d, -f ${cpufields} >> ${fiostat}_cpu.csv
    
    paste -d, ${fiostat}_io.csv ${fiostat}_cpu.csv > ${fiostat}.csv
    rm ${fiostat}_io.csv ${fiostat}_cpu.csv
done

for f in `ls *.fio`
do
    disk_name=${f/.fio}
    io_pattern=${disk_name}_io_pattern.csv
    bw_iops_csv=${disk_name}_bw_iops.csv
    lat_csv=${disk_name}_lat.csv
    report=${disk_name}_sumary.csv

    echo "pattern" > ${io_pattern}
    grep -e pid= ${f} | sed -r -e "s/(randrw.*):.*\(.*/\1\n/g" -e "s/(.*):.*\(.*/\1/g" >> ${io_pattern}

    echo "I/O,KIOPS,BW (MiB/s)" > ${bw_iops_csv}
    grep -e BW= ${f} | sed -r -e "s/\s*(.*):\s*IOPS=([0-9\.k]+),\s*BW=([0-9\.]+MiB).*/\1,\2,\3/g" >> ${bw_iops_csv}

    echo "lat unit,min,max,avg,stdev" > ${lat_csv}
    grep -e "\slat\s.*avg=" ${f}  | sed -r -e "s/\s+(lat\s.*):\smin=\s*([0-9]+),\s+max=\s*([0-9]+),\s+avg=\s*([0-9\.]+),\sstdev=\s*([0-9\.]+).*/\1,\2,\3,\4,\5/g" >> ${lat_csv} 

    paste -d, ${io_pattern} ${bw_iops_csv} ${lat_csv} > ${report}
    rm ${io_pattern} ${bw_iops_csv} ${lat_csv}
done
popd